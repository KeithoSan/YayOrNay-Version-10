@model PagedList.IPagedList<YayOrNay.Models.Movie>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Movies";
}

<h2>Full Movie List</h2>

@using (Html.BeginForm("Index", "Movie", FormMethod.Get))
{
    <p>

        @* Search functions one drop down and list of genre that is included in the system *@
        Title: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        Genre: @Html.DropDownList("movieGenre", "All")
        <input type="submit" value="Search" />
    </p>
}

@*@if (HttpContext.Current.User.Identity.IsAuthenticated && HttpContext.Current.User.Identity.AuthenticationType.Equals("ADMIN"))
{
    <p>
        @Html.ActionLink("Add New Movie", "Create")
    </p>
}*@

@if (HttpContext.Current.User.Identity.IsAuthenticated && HttpContext.Current.User.Identity.IsAuthenticated)
{
    <p>
        @Html.ActionLink("Add New Movie", "Create")
    </p>
}
@*<p>
    @Html.ActionLink("Add New Movie", "Create")
</p>*@
<table class="table">
    <tr>

        <th>

        </th>


        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Genre", "Index", new { sortOrder = ViewBag.GenreSortParm, currentFilter = ViewBag.CurrentFilter })
            
        </th>
        <th>
            @Html.ActionLink("Certificate", "Index", new { sortOrder = ViewBag.CertSortParm, currentFilter = ViewBag.CurrentFilter })
            
        </th>

        <th>
            @Html.ActionLink("Release Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Overall Rating", "Index", new { sortOrder = ViewBag.RateSortParm, currentFilter = ViewBag.CurrentFilter })
            
        </th>
        <th>
            @Html.ActionLink("Number of Reviews", "Index", new { sortOrder = ViewBag.NumSortParm, currentFilter = ViewBag.CurrentFilter })
            
        </th>





        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>

            <td>

                @if (item.Files != null && item.Files.Any(f => f.FileType == FileType.Avatar))
                {
                    <img src="~/File?id=@item.Files.First(f => f.FileType == FileType.Avatar).FileId" alt="avatar" height="120" width="120" />
                }
            </td>



            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Certificate)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>

            <td>

                <div class="scroll">
                    @Html.DisplayFor(modelItem => item.AverageRating) out of 10
                </div>
            </td>

            <td>
                @item.Reviews.Count
            </td>

            <td>

                @if (HttpContext.Current.User.Identity.IsAuthenticated && HttpContext.Current.User.Identity.IsAuthenticated)
                {
                   
                        @Html.ActionLink("Edit Movie", "Edit")
                   
                }
                     |         
                @Html.ActionLink("Reviews", "Index", "Reviews", new { id = item.Id }, null) |

                @if (HttpContext.Current.User.Identity.IsAuthenticated && HttpContext.Current.User.Identity.IsAuthenticated)
                {

                    @Html.ActionLink("Delete", "Delete")

                }
                
                
                
               
            </td>






        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

<FORM><INPUT Type="button" VALUE="Back" onClick="history.go(-1);return true;"></FORM>